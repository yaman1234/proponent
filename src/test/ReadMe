unable to read all the rows which exists when pagination
pick date from the calendar


// set the time of 30 seconds for page to complete the loading

driver.manage().timeouts().pageLoadTimeout(30, TimeUnit.SECONDS);
driver.get("https://www.google.com/");



//		without reading data from excel
//		String searchCN = "149989";
//		System.out.println("row count : " + ExcelRead.getRowCount("sheet1"));
//		 
//		pageObj.caseNo().sendKeys(searchCN);
//		pageObj.searchBtn().click();
//		
//		Thread.sleep(3000);
//		
//		WebElement targetTable = driver.findElement(By.xpath("//*[@id=\"root\"]/div/div/div/div/div/div/div/div/div/div[2]/table"));
//		System.out.println("Total no of data rows in table : "+ TableData.getRowCount(targetTable));
//		
//		Thread.sleep(3000);
//		String cellData = TableData.getElement(targetTable, 1, 0).getText();
//		if (cellData.equals(searchCN)) {
//			test.log(LogStatus.PASS, "Case Number :" + searchCN+" Found");
//		popup alert using JS
//		jsDriver.executeScript("alert('Case number found');");
//		} else {
//			test.log(LogStatus.FAIL, "Case Number :" + searchCN +"not Found");
//		}

June 1
pick date from the datePicker
verify the result after the search not only from top row but all the rows including the pagination
Learn to scroll and Mouse Operations



package test;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterSuite;
import org.testng.annotations.BeforeSuite;
import org.testng.annotations.Test;

import com.relevantcodes.extentreports.ExtentReports;
import com.relevantcodes.extentreports.ExtentTest;

import pageObjects.PageObject;
import utilities.TableData;
import utilities.UtilBase;

public class HappyFlow extends UtilBase {

	ExtentTest test;
	ExtentReports report;
	String baseUrl;
	String username, password;
	PageObject pageObj = new PageObject();
	List<String> colData;
	WebDriverWait wait;

	@BeforeSuite
	public void beforeMethod() {
		initialiseDriver();
		driver.manage().window().maximize();
//		implicit wait
		driver.manage().timeouts().implicitlyWait(15, TimeUnit.SECONDS);
//		Explicit wait
		 wait = new WebDriverWait(driver, 5);
		report = new ExtentReports(System.getProperty("user.dir") + "//testReports//HappyFlowReport.html");
	}

	@Test(priority = 1)
	public void happyFlowTest() throws InterruptedException {
		test = report.startTest("Happy Flow Test");

		baseUrl = "http://10.0.2.248/";
		username = "kathmandu\\yamah022";
		password = "1@work";
		driver.get(baseUrl);

		pageObj.username().sendKeys(username);
		pageObj.password().sendKeys(password);
		pageObj.submit().click();
//		Thread.sleep(7000);
		wait.until(ExpectedConditions.invisibilityOfElementLocated(By.xpath("//*[@id='root']/div/div/form")));
		searchWithCustomerNumber("85564");
//		Thread.sleep(2000);
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@id='root']/div/div/div/div/div/div/div/div/div/div[2]/table")));
		scroll();
		Thread.sleep(2000);

		clickNextPage();
		printList();

		report.endTest(test);
	}

	@AfterSuite
	public void afterMethod() {
		report.flush();
//		driver.close();

	}

	public void searchWithDate() throws InterruptedException {
		driver.manage().timeouts().pageLoadTimeout(20, TimeUnit.SECONDS);
		pageObj.calendarFrom().click();
		pageObj.calendarFrom().sendKeys("2022-05-25");
		pageObj.calendarTo().sendKeys("2022-05-27");
		Thread.sleep(2000);
		pageObj.searchBtn().click();

	}

	public void searchWithCaseNumber() throws InterruptedException {
		String searchCN = "149989";
		pageObj.caseNo().sendKeys(searchCN);
		pageObj.searchBtn().click();

		Thread.sleep(3000);

		WebElement targetTable = driver
				.findElement(By.xpath("//*[@id='root']/div/div/div/div/div/div/div/div/div/div[2]/table"));
		System.out.println(TableData.getRowCount(targetTable));

		Thread.sleep(3000);
		String cellData = TableData.getElement(targetTable, 1, 0).getText();
		if (cellData.equals(searchCN)) {
			System.out.println("Case Number Found");
//			popup alert using JS
//			jsDriver.executeScript("alert('Case number found');");
		} else {
			System.out.println("Case Number not found");
		}

	}

	public void searchWithCustomerNumber(String custNo) throws InterruptedException {
		pageObj.customerNo().sendKeys(custNo);
		pageObj.searchBtn().click();

		/*
		 * Thread.sleep(2000); WebElement targetTable = driver .findElement(By.xpath(
		 * "//*[@id='root']/div/div/div/div/div/div/div/div/div/div[2]/table"));
		 * 
		 * Thread.sleep(2000); String cellData = TableData.getElement(targetTable, 1,
		 * 1).getText(); if (cellData.equals(custNo)) {
		 * System.out.println("CellData : "+ cellData + "		Customer number : " +
		 * custNo); } else { System.out.println("Customer number not found"); }
		 */
	}

	public void searchByStatus() throws InterruptedException {

		WebElement elem = driver.findElement(By.cssSelector("#status"));
		elem.sendKeys(Keys.ENTER);
		Thread.sleep(2000);
		elem.sendKeys(Keys.ARROW_DOWN, Keys.ARROW_DOWN, Keys.ARROW_DOWN, Keys.ARROW_DOWN, Keys.ARROW_DOWN);
		elem.sendKeys(Keys.ENTER);
		pageObj.searchBtn().click();

		Thread.sleep(4000);
//		get row count
		System.out.println(" Total no of rows : " + TableData.getRowCount(pageObj.table()));
	}

	public void scroll() throws InterruptedException {
		Thread.sleep(2000);
		// Locating element by link text and store in variable "Element"
		WebElement Element = pageObj.pagination();
		// Scrolling down the page till the element is found
		jsDriver.executeScript("arguments[0].scrollIntoView();", Element);
	}

	public int getTotalLiPagination() throws InterruptedException {

		Thread.sleep(1000);
//		xpath of pagination section
		List<WebElement> pageList = driver.findElements(By.xpath("//*[@id='root']/div/div/div/div/div/div/div/ul/li"));
//		returns the total no of li element 
		return pageList.size();
	}

	public void storeColumn() throws InterruptedException {
//		get table
		WebElement targetTable = pageObj.table();
//		get row count
		int rc = TableData.getRowCount(targetTable);
		System.out.println("RowCount : " + rc);
		colData = new ArrayList<String>();
		String cellData = null;

		for (int i = 1; i <= rc; i++) {
//			colData.add(TableData.getCellText(targetTable, i, 2));
			cellData = driver.findElement(By.xpath(
					"//*[@id='root']/div/div/div/div/div/div/div/div/div/div[2]/table/tbody/tr[" + (i) + "]/td[3]"))
					.getText();
			colData.add(cellData);
		}
	}

	public void clickNextPage() throws InterruptedException {
//		get the last page no. and loop through the pages

		int n = getTotalLiPagination();
		System.out.println("Total no of li Elements : " + n);
//		get the last li
		WebElement lastLiElement = driver.findElement(
				By.cssSelector("#root > div > div > div > div > div > div > div > ul > li:nth-child(" + (n) + ")"));

		String liTitle = lastLiElement.getAttribute("title");
		if (liTitle.equals("Next Page")) {

			WebElement lastLiElement1 = driver.findElement(By.cssSelector(
					"#root > div > div > div > div > div > div > div > ul > li:nth-child(" + (n - 1) + ")"));
			int count = Integer.parseInt(lastLiElement1.getText());

			for (int i = 1; i < count; i++) {
				Thread.sleep(7000);
//				click next page via pagination
				driver.findElement(By.cssSelector(
						"#root > div > div > div > div > div > div > div > ul > li:nth-child(" + (n) + ")"))
						.click();
				storeColumn();
				Thread.sleep(3000);
			}

		} else {
//			Last page = n-2
			WebElement lastLiElement2 = driver.findElement(By.cssSelector(
					"#root > div > div > div > div > div > div > div > ul > li:nth-child(" + (n - 2) + ")"));

			int count = Integer.parseInt(lastLiElement2.getText());

			for (int i = 2; i <= count; i++) {
				Thread.sleep(7000);
//				click next page via pagination
				driver.findElement(By.cssSelector(
						"#root > div > div > div > div > div > div > div > ul > li:nth-child(" + (i + 1) + ")"))
						.click();
				storeColumn();
				Thread.sleep(3000);
			}
		}
	}

	public void printList() {
		Iterator<String> it = colData.iterator();
		while (it.hasNext()) {
			System.out.println(it.next());
		}

	}
}
